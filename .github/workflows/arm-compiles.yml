name: "armv8-a build"
'on':
  push:
    branches:
    - master
    - ci-sandbox
  pull_request:
    branches:
    - '**'
env:
  ccache_basedir: ${{ github.workspace }}
  ccache_dir: "${{ github.workspace }}/.ccache"
  ccache_compilercheck: content
  ccache_compress: 'true'
  ccache_compresslevel: 9
  ccache_maxsize: 200M
  ccache_cmake: -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER_LAUNCHER=ccache

jobs:
  ubuntu:
    name: "ARM Ubuntu Latest via Android NDK"
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Install prerequisites
      run: |
          wget -c --quiet https://dl.google.com/android/repository/android-ndk-r23b-linux.zip
          unzip -qq android-ndk-r23b-linux.zip
          sudo apt-get -y install ccache cmake

    - name: Generate ccache_vars for ccache based on machine
      shell: bash
      id: ccache_vars
      run: |-
        echo "::set-output name=hash::$(echo ${{ env.ccache_compilercheck }})"
        echo "::set-output name=timestamp::$(date '+%Y-%m-%dT%H.%M.%S')"
    - name: Cache-op for build-cache through ccache
      uses: actions/cache@v2
      with:
        path: ${{ env.ccache_dir }}
        key: ccache-${{ matrix.identifier }}-${{ steps.ccache_vars.outputs.hash }}-${{ github.ref }}-${{ steps.ccache_vars.outputs.timestamp }}
        restore-keys: |-
          ccache-${{ matrix.identifier }}-${{ steps.ccache_vars.outputs.hash }}-${{ github.ref }}
          ccache-${{ matrix.identifier }}-${{ steps.ccache_vars.outputs.hash }}
          ccache-${{ matrix.identifier }}

    - name: ccache environment setup
      run: |-
        echo "CCACHE_COMPILER_CHECK=${{ env.ccache_compilercheck }}" >> $GITHUB_ENV
        echo "CCACHE_BASEDIR=${{ env.ccache_basedir }}" >> $GITHUB_ENV
        echo "CCACHE_COMPRESS=${{ env.ccache_compress }}" >> $GITHUB_ENV
        echo "CCACHE_COMPRESSLEVEL=${{ env.ccache_compresslevel }}" >> $GITHUB_ENV
        echo "CCACHE_DIR=${{ env.ccache_dir }}" >> $GITHUB_ENV
        echo "CCACHE_MAXSIZE=${{ env.ccache_maxsize }}" >> $GITHUB_ENV

    - name: ccache prolog
      run: |-
        ccache -s # Print current cache stats
        ccache -z # Zero cache entry

    - name: Generate buildfiles for marian on android via cmake
      run: |-
        mkdir -p build 
        cd build

        NDK="${{ github.workspace }}/android-ndk-r23b"
        ABI="arm64-v8a"
        MINSDK_VERSION=28
        ANDROID_PLATFORM=28

        LEMONADE_ARGS=(
            -DCOMPILE_TESTS=OFF
            -DCOMPILE_BENCHMARKS=ON
        )


        OTHER_ANDROID_ARGS=(
            -DANDROID_ARM_NEON=TRUE
        )

        OTHER_MARIAN_ARGS=(
            -DCMAKE_HAVE_THREADS_LIBRARY=1
            -DCMAKE_USE_WIN32_THREADS_INIT=0
            -DCMAKE_USE_PTHREADS_INIT=1
            -DTHREADS_PREFER_PTHREAD_FLAG=ON
            -DBUILD_ARCH=armv8-a
        )

        cmake \
            -DCMAKE_TOOLCHAIN_FILE=$NDK/build/cmake/android.toolchain.cmake \
            -DANDROID_TOOLCHAIN=clang \
            -DANDROID_ABI=$ABI \
            -DANDROID_PLATFORM=$ANDROID_PLATFORM \
            -DANDROID_NATIVE_API_LEVEL=$MINSDKVERSION \
            -DANDROID_TOOLCHAIN_NAME=arm-linux-androideabi-4.8 \
            -DANDROID_STL=c++_static \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER_LAUNCHER=ccache \
            "${OTHER_ANDROID_ARGS[@]}" "${OTHER_MARIAN_ARGS[@]}" "${LEMONADE_ARGS[@]}" \
            ..

    - name : Build library for android
      working-directory: build
      run: |-
          make -j2

    - name: ccache epilog
      run: 'ccache -s # Print current cache stats'

